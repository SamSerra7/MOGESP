@model IEnumerable<String>
@{
    ViewData["Title"] = "CuadroGeneral";
}
<br><br>
<div class="container">
    <div style="width:810px; padding:3px;">
        <div class="col-md-12 col-xs-12 col-sm-12">
            <center>
                <h2>Cuadro General</h2>
            </center>
        </div>
        <br />
        <div class="col-md-12 col-xs-12 col-sm-12 col-lg-12">
            <hr />
        </div>
        <br />
        <div>
            <h6>No.Convocatoria</h6>
            <select class="browser-default custom-select" id="buscarNumConvocatoria">
                <option value="AA">Todas</option>
                @foreach (var convocatoria in Model)
                {
                    <option value="@convocatoria">
                        @convocatoria
                    </option>
                }
            </select>
            <h6>No.Flujo</h6>
            <select class="browser-default custom-select" id="buscarNumFlujo">
                <option value="0">Todos</option>
            </select>



            <br><br>

            <h4>Filtros:</h4>

            <br>

            <div style="width:200px; float:left;">
                <h6>Condicion de puesto</h6>
                <select id="estadoSelectF" class="browser-default custom-select">
                    <option selected value="0">Todos</option>
                    <option value="1">Nombrados</option>
                    <option value="2">Positivos</option>
                    <option value="3">En espera</option>
                    <option value="4">Negativos</option>
                </select>

            </div>

            <div style="width:200px; float:left;">
                <h6>Puestos</h6>
                <select id="puestoSelectF" class="browser-default custom-select">
                    <option selected value="0">Todos</option>
                    <option value="1">Investigador 1</option>
                    <option value="2">Agente de protecci&oacute;n</option>
                    <option value="3">Custodio de Detenidos</option>
                    <option value="4">Agente de localizaci&oacute;n</option>
                </select>

            </div>




            <br><br><br><br>
        </div>
        <button class="btn btn-success" id="aplicarFiltros">Aplicar</button>
        <br><br>
    </div>
</div>
<div class="table-responsive col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto;">
    <table id="estadoTabla" class="table table-bordered table-responsive table-hover">
        <thead style="align-content: center;">
            <tr style=" background-color: #222;" class="btn-primary">

                <th scope="col">
                    Nombrados
                </th>
                <th scope="col">
                    Positivos en espera
                </th>
                <th scope="col">
                    En Espera
                </th>
                <th scope="col">
                    Negativos
                </th>

            </tr>
        </thead>

        <tbody>

            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>

            </tr>

        </tbody>

    </table>

</div>
<br><br>

<!--Tabla Resumen de días-->
<div class="table-responsive col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto;">
    <table id="tablaDeps" class="table table-striped table-bordered">
        <thead style="align-content: center;">
            <tr style=" background-color: #222;" class="btn-primary">
                <th class="centrarTitulos">Gesti&oacute;n Humana - Administraci&oacute;n</th>
                <th class="centrarTitulos">Antecedentes</th>
                <th class="centrarTitulos">Transportes</th>
                <th class="centrarTitulos">Pruebas M&eacute;dicas</th>
                <th class="centrarTitulos">Toxolog&iacute;a</th>

            </tr>
        </thead>

        <tr style="background:#f1f1f1"></tr>

    </table>

</div>


    <h2>Striped Rows</h2>
    <p>The .table-striped class adds zebra-stripes to a table:</p>
    <table id="tablaPrimerosIngresos" class="table table-striped">
        <thead>
            <tr>
                <th>N&deg;. Concurso</th>
                <th>Ubicaci&oacute;n</th>
                <th>N&deg;. C&eacute;dula</th>
                <th>Nombre</th>
                <th>Investigador 1</th>
                <th>Agente de Protecci&oacute;n</th>
                <th>Custodio de detenidos</th>
                <th>Agente de localizaci&oacute;n</th>
                <th>
                    Tr&aacute;mite
                    <br>Administraci&oacute;n
                </th>
                <th>
                    Pruebas
                    <br>Psicol&oacute;gicas-Psicom&eacute;tricas
                </th>
                <th>
                    Tr&aacute;mite
                    <br>Administraci&oacute;n
                </th>
                <th>
                    Invest.
                    <br>De Antecedentes
                </th>
                <th>
                    Tr&aacute;mite
                    <br>Administraci&oacute;n
                </th>
                <th>Vialidad</th>
                <th>
                    Fecha Envio a GH
                    <br>Traslado a Nueva Etapa
                </th>
                <th>
                    Tr&aacute;mite
                    <br>Administraci&oacute;n
                </th>
                <th>Pruebas M&eacute;dicas</th>
                <th>
                    Tr&aacute;mite
                    <br>Administraci&oacute;n
                </th>
                <th>Toxicolog&iacute;a</th>
                <th>
                    Instancia en que
                    <br>Perdi&oacute; el Proceso
                </th>
                <th>Condici&oacute;n</th>

                <th>Fecha Ingreso</th>
                <th>
                    Cantidad Total
                    <br>D&iacute;as en Tr&aacute;mite
                </th>
            </tr>
        </thead>
        <tbody>
            
        </tbody>
    </table>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.bootstrap.min.css">

@section Scripts{
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.colVis.min.js"></script>

    <script>
        
        $(document).ready(function () {
            var selectFlujos = $("#buscarNumFlujo");
            var selectConvocatoria = $("#buscarNumConvocatoria");
            var tablaDeps = $("#tablaDeps");
            var estadoTabla = $("#estadoTabla");
            var estadoSelectF = $("#estadoSelectF");
            var puestoSelectF = $("#puestoSelectF");

            var nombrePI = "";
            var puestos = "N/A";
            var investigador1 = "N/A";
            var agenteDeProteccion = "N/A";
            var custodioDeDetenidos = "N/A";
            var agenteDeLocalizacion = "N/A";

            var estadoVal;
            var puestoVal;
            var rowNode;
            var table = $('#tablaPrimerosIngresos').DataTable({
                dom: 'Bfrtip',
                buttons: ['copy', 'excel', 'pdf',
                    {
                        extend: 'colvis',
                        columns: [3,8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
                    }],
                responsive: true,
                "scrollX": true,
                info: false,
                "columnDefs": [
                    { "visible": false, "targets": [3,8,9,10,11,12,13,14,15,16,17,18,19,21]}
                ]
                
            });

            function displayTable(data) {
                table
                    .clear()
                    .draw();
                tablaDeps.find("tr:gt(0)").remove();
                estadoTabla.find("tr:gt(0)").remove();

                for (key in data.listaCuadroGeneral) {
                    puestos = "";
                    if (data.listaCuadroGeneral.hasOwnProperty(key)) {
                        nombrePI = "" + data.listaCuadroGeneral[key].nombrePI + " " + data.listaCuadroGeneral[key].primerApellido + " " + data.listaCuadroGeneral[key].segundoApellido;
                        investigador1 = "N/A";
                        agenteDeProteccion = "N/A";
                        custodioDeDetenidos = "N/A";
                        agenteDeLocalizacion = "N/A";
                        for (puestoKey in data.listaCuadroGeneral[key].puestosAplica) {

                            puestos = puestos + data.listaCuadroGeneral[key].puestosAplica[puestoKey].nombre + ", ";
                            if (data.listaCuadroGeneral[key].puestosAplica[puestoKey].nombre == "Investigador 1") {
                                investigador1 = data.listaCuadroGeneral[key].puestosAplica[puestoKey].condicion
                            } else if (data.listaCuadroGeneral[key].puestosAplica[puestoKey].nombre == "Agente de Proteccion") {
                                agenteDeProteccion = data.listaCuadroGeneral[key].puestosAplica[puestoKey].condicion
                            } else if (data.listaCuadroGeneral[key].puestosAplica[puestoKey].nombre == "Custodio de detenidos") {
                                custodioDeDetenidos = data.listaCuadroGeneral[key].puestosAplica[puestoKey].condicion
                            } else if (data.listaCuadroGeneral[key].puestosAplica[puestoKey].nombre == "Agente de localizacion") {
                                agenteDeLocalizacion = data.listaCuadroGeneral[key].puestosAplica[puestoKey].condicion
                            }
                           
                        }

                        
                        rowNode = table.row.add([
                            data.listaCuadroGeneral[key].numeroConvocatoria,
                            data.listaCuadroGeneral[key].numeroFlujo,
                            data.listaCuadroGeneral[key].numeroCedula,
                            nombrePI,
                            investigador1,
                            agenteDeProteccion,
                            custodioDeDetenidos,
                            agenteDeLocalizacion,
                            data.listaCuadroGeneral[key].cantidadDiasAdminPruebasGH,
                            data.listaCuadroGeneral[key].cantidadDiasPruebasGH,
                            data.listaCuadroGeneral[key].cantidadDiasAdminAntecedentes,
                            data.listaCuadroGeneral[key].cantidadDiasAntecedentes,
                            data.listaCuadroGeneral[key].cantidadDiasAdminVialidad,
                            data.listaCuadroGeneral[key].cantidadDiasVialidad,
                            data.listaCuadroGeneral[key].fechaEnvioGHTraslado,
                            data.listaCuadroGeneral[key].cantidadDiasAdminPruebasMedicas,
                            data.listaCuadroGeneral[key].cantidadDiasPruebasMedicas,
                            data.listaCuadroGeneral[key].cantidadDiasAdminToxicologia,
                            data.listaCuadroGeneral[key].cantidadDiasToxicologia,
                            data.listaCuadroGeneral[key].instanciaPerdioProceso,
                            data.listaCuadroGeneral[key].condicion,
                            data.listaCuadroGeneral[key].fechaIngreso,
                            data.listaCuadroGeneral[key].cantidadDiasTotalesTramite
                        ]).draw().node();
                        if (data.listaCuadroGeneral[key].condicion == 'Pendiente') {
                            $(rowNode).find('td').eq(7).addClass('warning');
                        } else if (data.listaCuadroGeneral[key].condicion == 'Positivo') {
                            $(rowNode).find('td').eq(7).addClass('info');
                        } else if (data.listaCuadroGeneral[key].condicion == 'Negativo') {
                            $(rowNode).find('td').eq(7).addClass('danger'); 
                        } else if (data.listaCuadroGeneral[key].condicion == 'Nombrado') {
                            $(rowNode).find('td').eq(7).addClass('success'); 
                        } else if (data.listaCuadroGeneral[key].condicion == 'Reprogramar') {
                            $(rowNode).find('td').eq(7).addClass('active');
                        } else if (data.listaCuadroGeneral[key].condicion == 'Congelo') {
                            $(rowNode).find('td').eq(7).addClass('default');
                        } 
                        

                    }


                }
                $('<tr style="background:#f1f1f1" id="tuplaDeps">' + '</tr>').appendTo(tablaDeps);
                $(
                    '<td>' + data.cantidadPruebasGH + '</td>' +
                    '<td>' + data.cantidadAntecedentes + '</td>' +
                    '<td>' + data.cantidadVialidad + '</td>' +
                    '<td>' + data.cantidadPruebasMedicas + '</td>' +
                    '<td>' + data.cantidadToxicologia + '</td>'
                )
                    .appendTo("#tuplaDeps");
                $('<tr style="background:#f1f1f1" id="tuplaEst">' + '</tr>').appendTo(estadoTabla);
                $(
                    '<td>' + data.cantidadNombrados + '</td>' +
                    '<td>' + data.cantidadPositivosEnEspera + '</td>' +
                    '<td>' + data.cantidadPendientes + '</td>' +
                    '<td>' + data.cantidadNegativos + '</td>'
                )
                    .appendTo("#tuplaEst");
                //hideDefaultColumns();
            }
            $("#aplicarFiltros").click(function () {
                estadoVal = estadoSelectF.val();
                puestoVal = puestoSelectF.val();
                if (estadoVal == 0 & puestoVal == 0) {
                    var url2 = "http://localhost:55439/api/cuadroGeneral/listaPI/" + selectConvocatoria.val() + "/" + selectFlujos.val();
                    metodoPostMuestraDatos(url2);
                } else if (estadoVal < 0 || puestoVal < 0) {
                    alert("El cuadro general seleccionado esta vacio");
                } else if (estadoVal > 4 || puestoVal > 4) {
                    alert("El cuadro general seleccionado esta vacio");
                } else {

                    var url2 = "http://localhost:55439/api/cuadroGeneral/listaPIFiltrado/" + selectConvocatoria.val() + "/" + selectFlujos.val() +
                        "/" + estadoVal + "/" + puestoVal;

                    metodoPostMuestraDatos(url2);
                }

                //applyFilters(dataP, 0, dataP.listaCuadroGeneral.length, estadoVal, puestoVal);


            });

            function metodoPostMuestraDatos(url2) {
                $.post(url2, null, function (data) {
                    dataP = data;
                    if (data.listaCuadroGeneral.length === 0) {
                        alert("El cuadro general seleccionado esta vacio");
                    } else {
                        displayTable(data);
                    }
                    //console.log("It works " + this.value)
                });
            }

            $("#buscarNumConvocatoria").on('change', function () {
                selectFlujos.empty();

                if (this.value != "") {
                    if (this.value == "AA") {

                        $(
                            '<option value="0">Todos</option>'
                        ).appendTo(selectFlujos);

                    } else {
                        var url = "http://localhost:55439/api/cuadroGeneral/" + this.value;

                        $.post(url, null, function (data) {

                            if (data.length === 0) {
                                alert("La convocatoria seleccionada no tiene flujos");
                            } else {
                                var size = 0;
                                for (key in data) {
                                    if (data.hasOwnProperty(key)) {

                                        $(
                                            '<option value="' + data[size] + '">' +
                                            data[size] +
                                            '</option>'
                                        )
                                            .appendTo(selectFlujos);
                                        size = size + 1;

                                    }


                                }
                                $(
                                    '<option value="0">Todos</option>'
                                )
                                    .appendTo(selectFlujos);
                                //btn_BuscarFLCV.prop("disabled", false);
                            }
                            //console.log("It works " + this.value)
                        });
                    }

                }

            });
        });
        


    </script>

}


